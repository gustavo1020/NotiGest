name: Unit Tests Development

on: 
  pull_request:
     branches:
     - main

jobs:
 sonar-test:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'
          
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
          
      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          dotnet tool install --global dotnet-sonarscanner

      - name: Build and analyze
        shell: powershell
        run: |
          dotnet-sonarscanner begin /k:"gustavo1020_NotiGest_5cbb8fe6-63b1-414a-963b-23b86df95d20" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
          cd NotiGest
          dotnet restore
          dotnet build
          dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
